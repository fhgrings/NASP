#
# Software Name : 5G-all-in-one-helm
# SPDX-FileCopyrightText: Copyright (c) 2022
# SPDX-License-Identifier: Apache-2.0
#
# This software is distributed under the Apache License 2.0,
# the text of which is available at todo
# or see the "LICENSE" file for more details.
#
# Author: Gustavo Zanatta Bruno
# Software description: An open-source project providing Helm charts to deploy 5G components (Core + RAN) on top of Kubernetes
#
# Default values for ueransim-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "rantester.fullname" . }}
  labels:
    {{- include "rantester.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "rantester.fullname" . }}-service
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "rantester.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rantester.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: n1-ue
              containerPort: 4997
              protocol: UDP
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          command: ["sleep"]
          args: ["1000000"]
          #command: ["./app"]
          #args: ["ue"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: {{ .Values.volume.mount }}
            name: {{ .Values.volume.name }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: {{ .Values.volume.name }}
        configMap:
          name: {{ .Values.configmap.name }}

