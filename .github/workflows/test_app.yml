name: Test NASP Application

on:
  workflow_call:  # This makes the workflow reusable
    inputs:
      python-version:
        required: false
        type: string
        default: "3.11"  
  pull_request:
    branches: [ "main" ]
    
  workflow_dispatch:  # Allow manual triggers

permissions:
  contents: read

jobs:
  install-dependencies:
    uses: ./.github/workflows/install_dependencies.yml  # Reference the reusable workflow
    with:
      python-version: "3.10"  # Optional: Override inputs defined in the reusable workflow
    permissions:
      checks: write
      contents: read
  
  test-app:
    needs: install-dependencies  # Run only if the install-dependencies job succeeds
    runs-on: ubuntu-latest
    permissions:
      checks: write

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # Step 3: Install dependencies
      - name: Install dependencies with Poetry
        working-directory: ./nasp
        run: |
          pip install poetry
          poetry install --no-root

      # Step 4: Run tests with pytest
      - name: Run tests
        working-directory: ./nasp
        run: |
          poetry run poetry run pytest --maxfail=1  -vv  --junit-xml=junit.xml
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/junit.xml'
          detailed_summary: true
          include_passed: true
      # Step 5: Log in to Docker Hub or another registry
      # - name: Log in to Docker Registry
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # # Step 6: Build the Docker image
      # - name: Build Docker image
      #   run: |
      #     docker build -t fhgrings/nasp:latest .

      # # Step 7: Push the Docker image to the registry
      # - name: Push Docker image
      #   run: |
      #     docker push fhgrings/nasp:latest
